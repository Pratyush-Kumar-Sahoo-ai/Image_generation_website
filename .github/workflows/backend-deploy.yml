name: Backend CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
    paths:
      - 'api.py'
      - 'requirements.txt'
      - 'Dockerfile.backend'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'api.py'
      - 'requirements.txt'
      - 'Dockerfile.backend'

env:
  REGION: asia-south1
  PROJECT_ID: velvety-arc-470617-v8

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest httpx
    
    - name: Run backend tests
      run: |
        python -c "import api; print('Backend imports successfully')"
    
    - name: Test API startup
      run: |
        timeout 30s uvicorn api:app --host 0.0.0.0 --port 8000 &
        sleep 10
        curl -f http://localhost:8000/health || echo "Health check failed (expected during model download)"

  deploy-backend:
    needs: test-backend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Configure Docker for GCP
      run: |
        gcloud auth configure-docker
    
    - name: Build and push backend image
      run: |
        # Build backend Docker image
        docker build -f Dockerfile.backend -t gcr.io/${{ env.PROJECT_ID }}/lumina-backend:${{ github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/lumina-backend:${{ github.sha }}
    
    - name: Deploy backend to Cloud Run
      run: |
        gcloud run deploy lumina-backend \
          --image gcr.io/${{ env.PROJECT_ID }}/lumina-backend:${{ github.sha }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --port 8000 \
          --memory 32Gi \
          --cpu 8 \
          --max-instances 2 \
          --set-env-vars "NODE_ENV=production,PYTHONUNBUFFERED=1" \
          --timeout 3600 \
          --execution-environment gen2 \
          --cpu-boost
    
    - name: Get backend URL
      run: |
        BACKEND_URL=$(gcloud run services describe lumina-backend --region=${{ env.REGION }} --format='value(status.url)')
        echo "Backend deployed to: $BACKEND_URL"
        echo "BACKEND_URL=$BACKEND_URL" >> $GITHUB_ENV
    
    - name: Update frontend with backend URL
      run: |
        echo "Backend URL: ${{ env.BACKEND_URL }}"
        echo "Frontend should be updated to use: ${{ env.BACKEND_URL }}" 